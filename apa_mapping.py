# -*- coding: utf-8 -*-
"""
File Name: init_femb.py
Author: GSS
Mail: gao.hillhill@gmail.com
Description: 
Created Time: 7/15/2016 11:47:39 AM
Last modified: Wed Mar 21 15:56:54 2018
"""

#defaut setting for scientific caculation
#import numpy
#import scipy
#from numpy import *
#import numpy as np
#import scipy as sp
#import pylab as pl

class APA_MAP:
    def apa_femb_mapping_pd(self):
        apa_femb_loc = [ 
                        #wire   #FEMBchn  #FEMBasic # ASICchn
                        ["X01", "031", 2, "15"],
                        ["X03", "030", 2, "14"],
                        ["X05", "029", 2, "13"],
                        ["X07", "028", 2, "12"],
                        ["X09", "027", 2, "11"],
                        ["X11", "026", 2, "10"],
                        ["V01", "025", 2, "09"],
                        ["V03", "024", 2, "08"],
                        ["V05", "023", 2, "07"],
                        ["V07", "022", 2, "06"],
                        ["V09", "021", 2, "05"],
                        ["U01", "020", 2, "04"],
                        ["U03", "019", 2, "03"],
                        ["U05", "018", 2, "02"],
                        ["U07", "017", 2, "01"],
                        ["U09", "016", 2, "00"],
                        ["X13", "015", 1, "15"],
                        ["X15", "014", 1, "14"],
                        ["X17", "013", 1, "13"],
                        ["X19", "012", 1, "12"],
                        ["X21", "011", 1, "11"],
                        ["X23", "010", 1, "10"],
                        ["V11", "009", 1, "09"],
                        ["V13", "008", 1, "08"],
                        ["V15", "007", 1, "07"],
                        ["V17", "006", 1, "06"],
                        ["V19", "005", 1, "05"],
                        ["U11", "004", 1, "04"],
                        ["U13", "003", 1, "03"],
                        ["U15", "002", 1, "02"],
                        ["U17", "001", 1, "01"],
                        ["U19", "000", 1, "00"],
    
                        ["X02", "048", 4, "00"],
                        ["X04", "049", 4, "01"],
                        ["X06", "050", 4, "02"],
                        ["X08", "051", 4, "03"],
                        ["X10", "052", 4, "04"],
                        ["X12", "053", 4, "05"],
                        ["V02", "054", 4, "06"],
                        ["V04", "055", 4, "07"],
                        ["V06", "056", 4, "08"],
                        ["V08", "057", 4, "09"],
                        ["V10", "058", 4, "10"],
                        ["U02", "059", 4, "11"],
                        ["U04", "060", 4, "12"],
                        ["U06", "061", 4, "13"],
                        ["U08", "062", 4, "14"],
                        ["U10", "063", 4, "15"],
                        ["X14", "032", 3, "00"],
                        ["X16", "033", 3, "01"],
                        ["X18", "034", 3, "02"],
                        ["X20", "035", 3, "03"],
                        ["X22", "036", 3, "04"],
                        ["X24", "037", 3, "05"],
                        ["V12", "038", 3, "06"],
                        ["V14", "039", 3, "07"],
                        ["V16", "040", 3, "08"],
                        ["V18", "041", 3, "09"],
                        ["V20", "042", 3, "10"],
                        ["U12", "043", 3, "11"],
                        ["U14", "044", 3, "12"],
                        ["U16", "045", 3, "13"],
                        ["U18", "046", 3, "14"],
                        ["U20", "047", 3, "15"],
                        
                        ["X26", "096", 7, "00"], 
                        ["X28", "097", 7, "01"], 
                        ["X30", "098", 7, "02"], 
                        ["X32", "099", 7, "03"], 
                        ["X34", "100", 7, "04"], 
                        ["X36", "101", 7, "05"], 
                        ["V22", "102", 7, "06"], 
                        ["V24", "103", 7, "07"], 
                        ["V26", "104", 7, "08"], 
                        ["V28", "105", 7, "09"], 
                        ["V30", "106", 7, "10"], 
                        ["U22", "107", 7, "11"], 
                        ["U24", "108", 7, "12"], 
                        ["U26", "109", 7, "13"], 
                        ["U28", "110", 7, "14"], 
                        ["U30", "111", 7, "15"], 
                        ["X38", "112", 8, "00"], 
                        ["X40", "113", 8, "01"], 
                        ["X42", "114", 8, "02"], 
                        ["X44", "115", 8, "03"], 
                        ["X46", "116", 8, "04"], 
                        ["X48", "117", 8, "05"], 
                        ["V32", "118", 8, "06"], 
                        ["V34", "119", 8, "07"], 
                        ["V36", "120", 8, "08"], 
                        ["V38", "121", 8, "09"], 
                        ["V40", "122", 8, "10"], 
                        ["U32", "123", 8, "11"], 
                        ["U34", "124", 8, "12"], 
                        ["U36", "125", 8, "13"], 
                        ["U38", "126", 8, "14"], 
                        ["U40", "127", 8, "15"], 
                        
                        ["X25", "079", 5, "15"],
                        ["X27", "078", 5, "14"],
                        ["X29", "077", 5, "13"],
                        ["X31", "076", 5, "12"],
                        ["X33", "075", 5, "11"],
                        ["X35", "074", 5, "10"],
                        ["V21", "073", 5, "09"],
                        ["V23", "072", 5, "08"],
                        ["V25", "071", 5, "07"],
                        ["V27", "070", 5, "06"],
                        ["V29", "069", 5, "05"],
                        ["U21", "068", 5, "04"],
                        ["U23", "067", 5, "03"],
                        ["U25", "066", 5, "02"],
                        ["U27", "065", 5, "01"],
                        ["U29", "064", 5, "00"],
                        ["X37", "095", 6, "15"],
                        ["X39", "094", 6, "14"],
                        ["X41", "093", 6, "13"],
                        ["X43", "092", 6, "12"],
                        ["X45", "091", 6, "11"],
                        ["X47", "090", 6, "10"],
                        ["V31", "089", 6, "09"],
                        ["V33", "088", 6, "08"],
                        ["V35", "087", 6, "07"],
                        ["V37", "086", 6, "06"],
                        ["V39", "085", 6, "05"],
                        ["U31", "084", 6, "04"],
                        ["U33", "083", 6, "03"],
                        ["U35", "082", 6, "02"],
                        ["U37", "081", 6, "01"],
                        ["U39", "080", 6, "00"]
                    ]
        All_sort = []
        for i in range(0,128,1):
            for chn in apa_femb_loc:
                if int(chn[1][0:3]) == i :
                    All_sort.append(chn)
    
        X_sort = []
        for i in range(1,49,1):
            for chn in apa_femb_loc:
                if chn[0][0] == "X" and int(chn[0][1:3]) == i :
                    X_sort.append(chn)
        V_sort = []
        for i in range(1,41,1):
            for chn in apa_femb_loc:
                if chn[0][0] == "V" and int(chn[0][1:3]) == i :
                    V_sort.append(chn)
    
        U_sort = []
        for i in range(1,41,1):
            for chn in apa_femb_loc:
                if chn[0][0] == "U" and int(chn[0][1:3]) == i :
                    U_sort.append(chn)
    
        return All_sort, X_sort, V_sort, U_sort
    
    def apa_mapping(self):
        if (self.APA == 'ProtoDUNE'):
            apa_yuv = []
            apa_y = []
            apa_u = []
            apa_v = []
            All_sort, X_sort, V_sort, U_sort = self.apa_femb_mapping_pd()
            for onewire in All_sort:
                apa_yuv.append(int(onewire[1]))
    
            for onewire in X_sort:
                if onewire[0][0] == "X":
                    apa_y.append(int(onewire[1]))
            for onewire in V_sort:
                if onewire[0][0] == "V":
                    apa_v.append(int(onewire[1]))
            for onewire in U_sort:
                if onewire[0][0] == "U":
                    apa_u.append(int(onewire[1]))
        else:
            apa_yuv = range(128)
            apa_y = [0  ,1  ,2  ,3  ,4  ,5  ,6  ,7  ,8  ,9  ,10 ,11 ,12 ,13 ,
                     18 ,19 ,20 ,21, 22, 23, 24, 25, 26, 27 ,28 ,29 ,30 ,31 ,
                     64, 65, 66 ,67, 68, 69, 70, 71, 72, 73 ,74 ,75 ,76 ,77 ,
                     82, 83 ,84 ,85, 86, 87, 88, 89, 90 ,91 ,92 ,93 ,94 ,95 , ]
            apa_v = [32, 33, 34 ,36, 38 , 40, 42, 44, 46,
                     48, 50, 52 ,54, 56 , 58, 60, 62, 63,
                     96, 98, 100,102,104,106,108,110,111,
                     112,113,114,116,118,120,122,124,126, ]
            apa_u = [14, 15, 16, 17, 78 , 79, 80, 81, 
                     35, 37, 39 ,41, 43 , 45, 47, 
                     49, 51, 53 ,55, 57 , 59, 61, 
                     97, 99, 101,103,105,107,109,
                     115,117,119,121,123,125,127, ]
        return apa_yuv, apa_y, apa_u, apa_v

    def __init__(self):
#        self.APA = 'APA40'
        self.APA = 'ProtoDUNE'

